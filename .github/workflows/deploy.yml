name: Deploy to PythonAnywhere and Update GitHub Environment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://twitchapis.pythonanywhere.com/

    steps:
      # Step 1: Create "pending" deployment on GitHub
      - name: Create GitHub Deployment
        id: create_deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production

      # Step 2: Trigger actual deployment on PythonAnywhere
      - name: Trigger PythonAnywhere Reload
        run: |
          response_code=$(curl -s -o /dev/null -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "X-Github-Event: push" \
            -H "X-Github-Delivery: ${{ github.run_id }}" \
            -H "User-Agent: GitHub-Hookshot/${{ github.run_id }}" \
            -H "X-Hub-Signature: sha1=$(echo -n '{"ref": "refs/heads/main"}' | openssl sha1 -hmac '${{ secrets.PYANY_WEBHOOK_SECRET }}' | sed 's/^.* //')" \
            -d '{"ref": "refs/heads/main"}' \
            "${{ secrets.PYANY_DEPLOY_URL }}")
                  
      # Step 3: Update deployment status (success or failure)
      - name: Update GitHub Deployment Status
        if: always()
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.create_deployment.outputs.deployment_id }}
          env: production
          env_url: https://twitchapis.pythonanywhere.com/
